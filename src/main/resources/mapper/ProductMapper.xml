<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petmily.mapperInterface.ProductMapper">
	
	<!-- <select id="selectOne" resultType="com.petmily.domain.ProductDTO">
		SELECT * FROM PRODUCT WHERE product_id=#{product_id}
	</select> -->
	
	<!-- <select id="selectList" resultType="com.petmily.domain.ProductDTO">
		select * from PRODUCT
	</select> -->
	
	<select id="selectOne" resultType="com.petmily.domain.ProductDTO">
		select p.*, pmp.promotion_image, pmp.promotion_discount, count(r.product_id) as review_cnt
		from product as p
		join promotion_product as pmp on p.promotion_id = pmp.promotion_id
		left join review as r on p.product_id = r.product_id
		where p.product_id = #{product_id}
		group by p.product_id
		
		<!-- SELECT p.*, pmp.promotion_image, pmp.promotion_discount
		FROM PRODUCT as p
		JOIN PROMOTION_PRODUCT as pmp
		ON p.promotion_id = pmp.promotion_id
		WHERE p.product_id = #{product_id} -->
	</select>
	
	<select id="selectList" resultType="com.petmily.domain.ProductDTO">
		select p.*, pmp.promotion_image, pmp.promotion_discount, count(r.product_id) as review_cnt
		from product as p
		join promotion_product as pmp on p.promotion_id = pmp.promotion_id
		left join review as r on p.product_id = r.product_id
		group by p.product_id
		
		<!-- SELECT p.*, pmp.promotion_image, pmp.promotion_discount
		FROM PRODUCT as p
		JOIN PROMOTION_PRODUCT as pmp
		ON p.promotion_id = pmp.promotion_id -->
	</select>
	
	<select id="selectPromotionList" resultType="com.petmily.domain.ProductDTO">
		select p.*,
		  case
		    when curdate() between pmp.promotion_start and pmp.promotion_end then pmp.promotion_discount
		    else 0
		  end as promotion_discount,
		  count(r.product_id) as review_cnt
		from product as p
		join promotion_product as pmp on p.promotion_id = pmp.promotion_id
		left join review as r on p.product_id = r.product_id
	    where p.promotion_id = #{promotion_id}
	    group by p.product_id
	</select>
    
	<select id="selectedList" resultType="com.petmily.domain.ProductDTO">
		select p.*,
		  case
		    when curdate() between pmp.promotion_start and pmp.promotion_end then pmp.promotion_discount
		    else 0
		  end as promotion_discount,
		  count(r.product_id) as review_cnt
		from product as p
		join promotion_product as pmp on p.promotion_id = pmp.promotion_id
		left join review as r on p.product_id = r.product_id
		where (#{param1} = 'all' or p.product_kind = #{param1} or p.product_kind = 'all')
		and (#{param2} = 'all' or p.product_category = #{param2} or p.product_category = 'all')
		group by p.product_id
	</select>
	
	<select id="selectThisMonthList" resultType="com.petmily.domain.ProductDTO">
		select p.*,
			case
			  when curdate() between pmp.promotion_start and pmp.promotion_end then pmp.promotion_discount
			  else 0
			end as promotion_discount,
		  count(r.product_id) as review_cnt
		from product as p
		join promotion_product as pmp on p.promotion_id = pmp.promotion_id
		left join review as r on p.product_id = r.product_id
		where month(p.product_regdate) = month(curdate())
		group by p.product_id
	</select>
	
	<select id="selectPopularList" resultType="com.petmily.domain.ProductDTO">
		select p.*,
		  case
		    when curdate() between pmp.promotion_start and pmp.promotion_end then pmp.promotion_discount
		    else 0
		  end as promotion_discount,
		  count(r.product_id) as review_cnt
		from product as p
		join promotion_product as pmp on p.promotion_id = pmp.promotion_id
		left join review as r on p.product_id = r.product_id
		where p.product_sales >= 50
		group by p.product_id
		order by p.product_sales desc
	</select>
	
	<select id="selectDiscountedList" resultType="com.petmily.domain.ProductDTO">
		select p.*,
		  case
		    when curdate() between pmp.promotion_start and pmp.promotion_end then pmp.promotion_discount
		    else 0
		  end as promotion_discount,
		  count(r.product_id) as review_cnt
		from product as p
		join promotion_product as pmp on p.promotion_id = pmp.promotion_id
		left join review as r on p.product_id = r.product_id
		group by p.product_id
		having promotion_discount > 0
		order by promotion_discount desc
	</select>
	
	<select id="selectSearchedList" resultType="com.petmily.domain.ProductDTO">		
		select p.*,
		  case
		    when curdate() between pmp.promotion_start and pmp.promotion_end then pmp.promotion_discount
		    else 0
		  end as promotion_discount,
		  count(r.product_id) as review_cnt
	    from product as p
	    join promotion_product as pmp on p.promotion_id = pmp.promotion_id
	    left join review as r on p.product_id = r.product_id
	    where p.product_name like concat('%', #{searchkeyword}, '%')
	    group by p.product_id
	</select>
	
	<select id="pinquiryList" resultType="com.petmily.domain.InquiryDTO">		
		select i.*
		from inquiry i left join product p
		on p.product_id = i.product_id
		where i.product_id = #{p.product_id}
		order by inquiry_regdate desc
	</select>
	
	<select id="pReviewList" resultType="com.petmily.domain.ReviewDTO">
		select r.*
		from review r left join product p
		on p.product_id = r.product_id
		where r.product_id = #{p.product_id}
		order by review_regdate desc
	</select>

	<insert id="insert">
		insert into product(promotion_id, product_kind, product_category, product_name, product_description, product_price, product_stock, product_sales, product_mainimagepath, product_detailimagepath, product_rating, product_origin)
		value (#{promotion_id}, #{product_kind}, #{product_category}, #{product_name}, #{product_description}, #{product_price}, #{product_stock}, #{product_sales}, #{product_mainimagepath}, #{product_detailimagepath}, #{product_rating}, #{product_origin})
	</insert>

	<update id="update">
		update product
		set promotion_id=#{promotion_id}, product_kind=#{product_kind}, product_category=#{product_category}, product_name=#{product_name}, product_description=#{product_description}, product_price=#{product_price}, product_stock=#{product_stock}, product_sales=#{product_sales}, product_regdate=#{product_regdate}, product_mainimagepath=#{product_mainimagepath}, product_detailimagepath=#{product_detailimagepath}, product_rating=#{product_rating}, product_origin=#{product_origin}
		where product_id=#{product_id}
	</update>
	<update id="updateP">
		update product p
		join order_detail od on p.product_id = od.product_id
		set p.product_stock = p.product_stock - od.product_cnt,
		    p.product_sales = p.product_sales + od.product_cnt
		where od.order_key = (select * from (select ifnull(max(order_key), 0)+1 from order_product) as temp);
	</update>
	<update id="updateD">
		update product p
		join order_detail od on p.product_id = od.product_id
		set p.product_stock = p.product_stock + od.product_cnt,
		    p.product_sales = p.product_sales - od.product_cnt
		where od.order_key = #{order_key};
	</update>
	
	<update id="updateProductRating">
		update product
		set product_rating = (
		    select avg(review_point) as average_rating
		    from review
		    where review.product_id = product.product_id
		    group by product_id
		)
		where exists (
		    select 1
		    from review
		    where review.product_id = product.product_id
		)
	</update>
	
	<delete id="delete">
		delete from product where product_id=#{product_id}
	</delete>
	
	<sql id="search">
		<!-- 1) CONCAT('%',#{keyword},'%') 처리 -->
		<if test="keyword!=null">
			<bind name="keyVal" value="'%'+keyword+'%'"/>
		</if>
		<!-- 2) LIKE 조건문 -->
		<choose>
			<when test="searchType!=null and searchType!='all'">
				and ${searchType} LIKE #{keyVal} )
			</when>	
			<when test="searchType!=null and searchType=='all' and keyword!=null">
				and ( product_name LIKE #{keyVal}
					  OR product_id LIKE #{keyVal}
					  OR product_description LIKE #{keyVal} ))
			</when>	
			<otherwise>)</otherwise>
		</choose>
	</sql>
	
	<select id="searchCri" resultType="com.petmily.domain.ProductDTO">
		select * from product
			where ( product_id>0 <include refid="search"></include>
			ORDER BY product_id DESC
			limit #{sno}, #{rowsPerPage}
	</select>
	
	<select id="searchTotalCount" resultType="int">
		select count(*) from product
			where ( product_id>0 <include refid="search"></include>
	</select>

	<select id="getProductPagedList" resultType="com.petmily.domain.ProductDTO">
		SELECT * FROM product
		ORDER BY product_id DESC
		LIMIT #{sno}, #{rowsPerPage}
	</select>
	
	<select id="productTotalCount" resultType="int">
		SELECT COUNT(*) FROM product
	</select>
</mapper>